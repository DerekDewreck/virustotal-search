"""
########################################################################################
Copyright (C) 17 Feb 20: EDUARD MARIAN

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.

########################################################################################
Feel free to contact me at eduard_marian@protonmail.com
Also check my website for more information: eduardmarian.xyz


"""
import requests, argparse, os, time

def checkkey(ckey):
	try:
		if len(ckey) == 64:
			return ckey
		else:
			print("Your Virus Total API must have 64 Alpha Numeric characters.")
			exit()

	except Exception as Error:
			print(Error)
			
def checkhash(chash):
	try:
		if len(chash) == 32:
			return chash
		elif len(chash) == 40:
			return chash
		elif len(chash) == 64:
			return chash
		else:
			print ("Your HASH must have 32, 40 or 64 Alpha Numeric characters.")
			exit()

	except Exception as Error:
			print(Error)
			
def checkfile(cfile):
	try:
		if os.path.isfile(cfile):
			return cfile
		else:
			print ("File %s is missing in your script directory." % (cfile))
			exit()
	except Exception as Error:
			print(Error)




def VT_Request(key, hash, output):
	params = {"apikey": key, "resource": hash}
	url = requests.get("https://www.virustotal.com/vtapi/v2/file/report", params=params)
	json_response = url.json()

	print(json_response)

	response = int(json_response.get("response_code"))
	if response == 0:
		print(hash + " is not in Virus Total")
		file = open(output,"a")
		file.write(hash + " is not in Virus Total")
		file.write("\n")
		file.close()
	elif response == 1:
		positives = int(json_response.get("positives"))
		if positives == 0:
			print(hash + " is not malicious")
			file = open(output,"a")
			file.write(hash + " is not malicious")
			file.write("\n")
			file.close()
		else:
			print(hash + " is malicious")
			file = open(output,"a")
			file.write(hash + " is malicious. Hit Count:" + str(positives))
			file.write("\n")
			file.close()
	else:
		print(hash + " could not be searched. Please try again later.")

def Main():
	parser = argparse.ArgumentParser(description="Simple script to access the information generated by VirusTotal.")
	parser.add_argument("-i", "--input", type=checkfile, required=False, help="Input File Location EX: /Desktop/Somewhere/input.txt")
	parser.add_argument("-o", "--output", required=True, help="Output File Location EX: /Desktop/Somewhere/output.txt ")
	parser.add_argument("-H", "--hash", type=checkhash, required=False, help="Single Hash EX: d41d8cd98f00b204e9800998ecf8427e")
	parser.add_argument("-k", "--key", type=checkkey, required=True, help="VT API Key EX: ASDFADSFDSFASDFADSFDSFADSF")
	parser.add_argument("-u", "--unlimited", action="store_const", const=1, required=False, help="Changes the 26 second sleep timer to 1.")
	args = parser.parse_args()

	# SINGLE HASH FUNCTION
	if args.hash and args.key:
		file = open(args.output,"w+")
		file.write("Below is the identified malicious file.\n\n")
		file.close()
		VT_Request(args.key, args.hash.rstrip(), args.output)

	# MULTI LIST HASH FUNCTION
	elif args.input and args.key:
		file = open(args.output,"w+")
		file.write("Below are the identified malicious files.\n\n")
		file.close()
		with open(args.input) as o:
			for line in o.readlines():
				VT_Request(args.key, line.rstrip(), args.output)
				if args.unlimited == 1:
					time.sleep(1)
				else:
					time.sleep(26)
	

if __name__ == "__main__":
	Main()